# Validar versão
openssl version

# Gerar chave privada
# Comando:
openssl req -new -subj "/UID={{APP_Client_ID}}/DC={{domainComponent_environment}}/CN={{commonName}}/O={{organizationName_CNPJ-CPF}}/OU={{organizationalUnitName_AG-CC}}/L={{localityName}}/ST={{stateOrProvinceName}}/C={{countryName}}" -out REQUEST_CERTIFICADO.csr -nodes -sha512 -newkey rsa:4096 -keyout PRIVATE_KEY.key

# UID = Client ID da APP criada no Dev. Portal;
# DC = Ambiente que a APP foi criada e o certificado será utilizado (“Sandbox” ou “Producao”);
# CN = Nome do proprietário da CC e CPF/CNPJ que será utilizado o certificado;
# O = Número do CPF ou CNPJ do titular da CC que será acessada pelo certificado;
# OU = Número da Agência “-” Número da Conta Corrente que será acessada pelo certificado;
# L = Nome da cidade de nascimento/registro do CPF/CNPJ (sem acentuação);
# ST = Sigla do estado (UF), da cidade informada;
# C = Sigla do país, do estado informado.

# Exemplo do comando:
openssl req -new -subj "/UID=4071f8df-e356-4dfd-8711-2e289cf963f9/DC=Sandbox/CN=Parceiro LTDA/O=22959214000122/OU=0001-12345678/L=Campinas/ST=SP/C=BR" -out REQUEST_CERTIFICADO.csr -nodes -sha512 -newkey rsa:4096 -keyout PRIVATE_KEY.key

# Exemplo de retorno:
Generating a RSA private key
.....................................................++++
.......++++
writing new private key to 'PRIVATE_KEY.key'
-----

# Para validar se a chave de solicitação de registro foi criada corretamente:
# Comando:
openssl req -in REQUEST_CERTIFICADO.csr -noout -text

# Exemplo de retorno:

Certificate Request:
    Data:
        Version: 1 (0x0)
        Subject: UID = 4071f8df-e356-4dfd-8711-2e289cf963f9, DC = sandbox, CN = parceiro ltda, O = 22959214000122, OU = 0001-12345678, L = campinas, ST = sp, C = br
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (4096 bit)
                Modulus:
                    00:e2:ad:56:27:ac:52:21:db:f8:c3:54:a8:97:96:
                    d3:dc:ba:e0:2e:06:ae:88:4a:fa:92:b1:db:57:64:
                    5b:3e:b2:43:a8:d7:36:d9:c8:3c:78:c8:47:d0:d2:
                    cc:13:ce:bb:e6:70:01:ac:32:69:54:e7:1d:c5:6e:
                    9d:2a:8c:ce:6b:bc:82:82:8b:bc:e8:80:ca:6f:2d:
                    02:78:db:98:21:1b:39:08:7e:3b:23:48:93:e5:aa:
                    6d:0e:c9:08:e1:28:26:09:1b:c4:1c:c8:30:48:e9:
                    65:b2:11:de:62:66:d2:16:9f:18:c2:ad:45:c8:36:
                    d6:c3:b2:60:82:b5:a3:86:72:55:35:bf:e9:e5:9d:
                    2e:2c:48:cb:36:31:84:12:1e:26:cf:bf:d9:bf:89:
                    e8:46:52:6b:8a:f8:87:2f:50:9d:10:62:49:38:73:
                    e6:da:b5:e6:e8:bc:70:36:0f:90:3c:1c:bf:0b:96:
                    4f:06:46:33:a2:f3:f3:8e:5e:c6:fe:a0:a5:24:b3:
                    76:6a:9f:b9:e7:62:fa:7d:44:eb:33:c1:4f:83:73:
                    62:df:6a:88:16:41:14:1c:52:0c:32:82:2a:a5:45:
                    3a:d4:c3:02:13:b7:0d:ec:db:37:cf:f8:09:7b:f5:
                    55:6b:d0:ed:35:3d:13:79:dd:b4:42:eb:85:2d:7f:
                    35:4d:fb:bc:be:8a:2b:68:43:6a:a4:00:ac:19:e4:
                    c1:39:51:71:94:55:32:05:28:6c:ab:81:f9:a4:78:
                    2d:d9:09:2c:b9:59:f7:c6:dc:35:93:6b:83:87:75:
                    d7:a5:f5:33:6c:96:e7:a2:cb:aa:60:2f:78:5d:43:
                    d2:7c:01:c9:d8:7e:dc:57:6c:25:9c:cd:d0:13:0b:
                    ba:4d:69:0d:b5:c0:0a:ee:c1:3f:92:d5:9b:bc:f2:
                    1d:e2:e7:87:1e:be:62:7c:84:83:3d:6c:f3:55:10:
                    d3:99:66:b0:11:f1:fc:34:0d:7d:e6:21:a0:ea:df:
                    1f:30:3d:66:eb:1a:a6:53:ba:d1:26:77:50:5f:73:
                    81:88:21:53:b5:6c:a0:30:f5:db:28:9c:86:d7:87:
                    07:6d:44:87:bc:9b:3d:05:24:d4:8f:33:e7:85:c1:
                    3b:51:8c:50:0e:ac:21:9b:36:9c:4b:9a:67:7f:10:
                    51:46:6d:82:8c:8a:b8:a8:8b:0c:05:c4:22:c5:f3:
                    6f:94:e8:c1:a3:f5:a3:c2:1b:6c:07:71:43:89:0e:
                    3b:65:2c:19:21:f6:42:9d:49:ad:04:bf:1e:3a:ed:
                    62:56:47:e2:be:39:f5:68:3d:67:1a:fd:bc:08:87:
                    35:52:e9:33:bb:0c:6c:1c:91:ef:a6:ef:b3:27:ae:
                    b7:cc:b9
                Exponent: 65537 (0x10001)
        Attributes:
            a0:00
    Signature Algorithm: sha512WithRSAEncryption
         c3:28:60:d8:61:e5:f4:ad:69:a4:af:20:a5:df:4d:18:dd:81:
         fd:1e:91:4e:7b:7d:61:42:5f:5f:69:df:80:37:c1:71:17:b7:
         81:ba:3c:b6:25:9b:a7:35:ca:c4:2b:13:ee:e5:2c:4a:23:8e:
         4a:78:23:c7:44:b9:53:3a:48:9b:ec:f6:41:40:19:d3:ae:e1:
         7d:bc:66:69:97:ba:a0:35:65:09:8b:a8:d7:88:e0:55:67:10:
         ae:40:1f:63:0c:32:bc:25:f5:95:59:73:f3:2f:e7:f3:ea:0c:
         8e:8f:00:f6:24:7a:88:db:f1:95:6b:59:f6:cd:65:a4:fb:dc:
         fd:81:1e:bd:6f:ea:3b:4d:1c:bf:e4:1c:6a:86:cf:22:60:34:
         50:f2:31:9c:53:ff:c8:8a:f8:cf:6f:cc:e3:de:bf:5b:2e:1a:
         33:b5:de:f3:00:3b:16:14:6f:5a:19:ee:11:b8:ae:bd:87:1b:
         97:2d:eb:4a:0d:de:ea:dd:21:e6:e7:83:ad:ae:17:ca:62:13:
         e1:83:c0:5b:da:0a:c7:93:4a:7f:f4:66:bc:b7:56:df:24:8f:
         df:1c:3e:42:1f:1e:e1:d1:61:5b:62:0b:3f:0e:2f:11:d8:06:
         a8:f5:e0:94:9f:0e:3f:e2:6e:d9:11:05:d6:0a:27:c7:6c:a0:
         13:3b:87:08:b4:0b:e1:39:24:4c:e4:aa:6f:2b:ca:07:5b:28:
         40:76:f5:b1:f2:e8:57:81:97:b0:79:e8:0c:73:8d:1a:39:85:
         bd:f7:d2:88:86:a7:3d:6c:56:09:ad:49:b0:ab:f4:93:91:3f:
         05:6c:bd:d3:6d:e8:5e:4b:8b:9c:d1:4c:7c:75:c4:ff:b7:ec:
         ae:f3:90:03:ba:f2:2e:98:f4:62:78:b9:08:7f:cd:77:cb:97:
         05:41:fd:65:d7:c1:db:14:a6:b2:40:30:81:9e:f5:a0:a7:d0:
         8d:31:29:1d:22:e6:9d:60:e5:04:94:91:14:4c:64:02:bb:5a:
         cf:d3:da:89:26:cc:8a:41:b4:f3:51:ef:69:71:9e:59:09:82:
         d4:15:d7:b6:eb:ea:b9:00:0b:d0:c6:e2:c3:95:02:70:16:94:
         91:eb:77:12:78:82:29:a8:5e:f0:5e:e0:dd:25:04:cb:c5:b3:
         34:19:43:bf:87:3c:50:c7:18:5d:8b:1e:dc:19:bd:a0:9f:20:
         36:7b:3d:1e:6a:a8:59:4a:1c:d1:57:60:8e:eb:3a:bb:4b:9d:
         29:fb:94:d8:d9:55:84:95:00:51:a3:82:d3:03:0b:2e:6e:6c:
         54:31:46:56:2d:df:76:f3:18:ae:2c:5c:76:c2:73:83:c2:26:
         60:7b:3d:60:87:93:40:e4


# Para gerar o arquivo .pfx a partir do certificado .cer e a chave privada .key
openssl pkcs12 -export -out certificado.pfx -inkey PRIVATE_KEY.key -in "REQUEST_CERTIFICADO (1).cer" -nodes

